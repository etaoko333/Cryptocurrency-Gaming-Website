name: Build

on:
  push:
    branches:
      - main


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile
        
      - name: Build (ignore warnings)
        run: |
          echo "CI=false" >> .env  # Disable strict mode
          yarn build || echo "Build completed with warnings"

      - name: Build production bundle
        run: yarn build

      
  docker:
    name: Docker Build and Push
    runs-on: self-hosted
    
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Build and Push
        run: |
          sudo docker build -t sholly333/cryptocurrency-gaming-website:latest .
          docker tag sholly333/cryptocurrency-gaming-website:latest
          docker push sholly333/cryptocurrency-gaming-website:latest
          
  deploy:
    name: Deploy to Container
    runs-on: self-hosted
    needs: docker
    steps:
      - name: Docker Pull
        run: docker pull sholly333/cryptocurrency-gaming-website:latest

      - name: Stop and Remove Old Container
        run: |
          docker stop cryptocurrency-gaming-website || true
          docker rm cryptocurrency-gaming-website || true

      - name: Run New Container
        run: docker run -d --name cryptocurrency-gaming-website -p 3000:80 sholly333/cryptocurrency-gaming-website:latest
         
      - name: Configure AWS Credentials (Optional)
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-west-1
        run: echo "AWS credentials configured"

      - name: Start Prometheus + Grafana
        run: |
          cd ~/cryptocurrency-gaming-website/monitoring
          docker compose up -d

      - name: Health Check /metrics
        run: |
          sleep 10
          curl --fail http://localhost:3000/metrics || exit 1
